{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","show","isReversed","setReverse","NONE","sortType","setSortType","goods","visibleGoods","sort","g1","g2","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAGKA,E,8DAAAA,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAkCL,IAAMC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAuBMC,EAnER,SACEA,EACAF,EACAH,GAEA,IAAMM,EAAY,YAAOD,GAezB,OAbIF,IAAaT,EAASQ,MACxBI,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQN,GACN,KAAKT,EAASgB,QACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKf,EAASkB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAKXb,EACKM,EAAaQ,UAGfR,EA2COS,CAAkBpB,EAAiBQ,EAAUH,GAE3D,OACE,qBAAKgB,UAAU,MAAf,UACiB,IAAdlB,EAEG,wBACEmB,KAAK,SACLC,QA7BI,WACZnB,GAAK,IA6BGiB,UAAU,sBAHZ,mBASA,qCACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QApCS,WACrBd,EAAYV,EAASgB,UAoCTM,UAAU,SAHZ,iCAQA,wBACEC,KAAK,SACLC,QAxCO,WACnBd,EAAYV,EAASkB,SAwCTI,UAAU,SAHZ,4BAQA,wBACEC,KAAK,SACLC,QAvCE,WACdjB,GAAYD,IAuCAgB,UAAU,SAHZ,qBAQA,wBACEC,KAAK,SACLC,QApDA,WACZd,EAAYV,EAASQ,MACrBD,GAAW,IAmDCe,UAAU,sBAHZ,sBASF,oBAAIA,UAAU,QAAd,SACGX,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAAIJ,UAAU,cAAd,SAA6BI,eC7H7CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1a27c163.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((g1, g2) => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return g1.localeCompare(g2);\n        case SortType.LENGTH:\n          return g1.length - g2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isStarted, show] = useState(false);\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const start = () => {\n    show(true);\n  };\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  const reverse = () => {\n    setReverse(!isReversed);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"App\">\n      {isStarted === false\n        ? (\n          <button\n            type=\"button\"\n            onClick={start}\n            className=\"start-button button\"\n          >\n            Start\n          </button>\n        )\n        : (\n          <>\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                onClick={sortByAlphabet}\n                className=\"button\"\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={sortByLength}\n                className=\"button\"\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={reverse}\n                className=\"button\"\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={reset}\n                className=\"reset-button button\"\n              >\n                Reset\n              </button>\n            </div>\n\n            <ul className=\"Goods\">\n              {goods.map(good => (\n                <li className=\"Goods__item\">{good}</li>\n              ))}\n            </ul>\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}